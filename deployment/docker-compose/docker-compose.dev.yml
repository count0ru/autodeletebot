version: '3.8'

services:
  autodeletebot:
    image: ghcr.io/count0ru/autodeletebot:latest
    container_name: autodeletebot-dev
    restart: unless-stopped
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - CHANNEL_ID=${CHANNEL_ID}
      - USER_ID=${USER_ID}
      - USER_USERNAME=${USER_USERNAME}
      - DELETE_AFTER_DAYS=${DELETE_AFTER_DAYS:-60}
      - CHECK_INTERVAL_MINUTES=${CHECK_INTERVAL_MINUTES:-720}
      - LOG_LEVEL=${LOG_LEVEL:-DEBUG}
      - LOG_FILE=/app/logs/bot.log
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config:/app/config
      - ../../:/app/src:ro  # Mount source code for development
    ports:
      - "8080:8080"
      - "5678:5678"  # Debug port
    networks:
      - autodeletebot-dev-network
    healthcheck:
      test: ["CMD", "python3", "-c", "import sqlite3; sqlite3.connect('/app/data/messages.db')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: ["python3", "-u", "telegram_bot.py"]  # Unbuffered output for logs

  cleanup-cron:
    image: ghcr.io/count0ru/autodeletebot:latest
    container_name: autodeletebot-cleanup-dev
    restart: unless-stopped
    command: ["python3", "-u", "cleanup_script.py"]
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - CHANNEL_ID=${CHANNEL_ID}
      - USER_ID=${USER_ID}
      - USER_USERNAME=${USER_USERNAME}
      - DELETE_AFTER_DAYS=${DELETE_AFTER_DAYS:-60}
      - CHECK_INTERVAL_MINUTES=${CHECK_INTERVAL_MINUTES:-720}
      - LOG_LEVEL=${LOG_LEVEL:-DEBUG}
      - LOG_FILE=/app/logs/cleanup.log
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config:/app/config
      - ../../:/app/src:ro  # Mount source code for development
    networks:
      - autodeletebot-dev-network
    profiles:
      - development

networks:
  autodeletebot-dev-network:
    driver: bridge
    name: autodeletebot-dev-network

volumes:
  data:
    driver: local
  logs:
    driver: local
  config:
    driver: local
