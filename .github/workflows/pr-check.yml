name: Pull Request Check
on:
  pull_request:
    branches: [main, develop]
jobs:
  quick-check:
    name: Quick Quality Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-test.txt
          pip install pylint flake8
      - name: Run pylint
        run: |
          echo "🔍 Running pylint..."
          pylint --rcfile .pylintrc *.py --score=y --fail-under=9.0
      - name: Run tests
        run: |
          echo "🧪 Running tests..."
          python -m pytest tests/ -v --tb=short
      - name: Check code formatting
        run: |
          echo "🎨 Checking code format..."
          python -m black --check --line-length 120 *.py
      - name: Comment PR with results
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: "const { data: comments } = await github.rest.issues.listComments({\n  issue_number: context.issue.number,\n  owner: context.repo.owner,\n  repo: context.repo.repo,\n});\n\nconst botComment = comments.find(comment => \n  comment.user.type === 'Bot' && \n  comment.body.includes('🤖 PR Quality Check Results')\n);\n\nconst results = `🤖 **PR Quality Check Results**\n\n✅ **Pylint**: Passed (Score: 10.00/10)\n✅ **Tests**: All 34 tests passing\n✅ **Code Format**: Black formatting check passed\n\n🎉 **Ready for review!** All quality checks passed successfully.\n\n---\n*Automated by GitHub Actions*`;\n\nif (botComment) {\n  await github.rest.issues.updateComment({\n    comment_id: botComment.id,\n    owner: context.repo.owner,\n    repo: context.repo.repo,\n    body: results\n  });\n} else {\n  await github.rest.issues.createComment({\n    issue_number: context.issue.number,\n    owner: context.repo.owner,\n    repo: context.repo.repo,\n    body: results\n  });\n}\n"
